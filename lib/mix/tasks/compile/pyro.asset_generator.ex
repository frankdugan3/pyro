defmodule Mix.Tasks.Compile.Pyro.AssetGenerator do
  @moduledoc false

  use Mix.Task

  @css_path Path.join(File.cwd!(), "priv/static/css/")

  @doc false
  def run(_args) do
    with {:ok, modules} <- :application.get_key(:pyro, :modules) do
      Enum.each(modules, fn module ->
        case Module.split(module) do
          ["Pyro", "Overrides", name] ->
            css_file = Path.join(@css_path, name <> ".css")

            global_style =
              "/* ### GLOBAL STYLE ### */\n\n" <>
                (apply(module, :global_style, []) ||
                   "/* No `global_style` specified in overrides. */") <>
                "\n"

            css =
              "/* ### THIS FILE IS AUTOMATICALLY GENERATED BY PYRO -- DO NOT EDIT DIRECTLY! */\n\n" <>
                global_style <> Pyro.Makeup.Style.stylesheet(module)

            File.write!(css_file, css)

          _ ->
            :noop
        end
      end)
    end

    :ok
  end
end
