defmodule <%= @module_name %> do
  # NOTE: THIS FILE WAS AUTOMATICALLY GENERATED BY PYRO. DO NOT EDIT DIRECTLY.
  # Instead, configure <%= @source_file %>

  ### CSS Strategy: <%= i @css_strategy %>

  use Phoenix.Component

  def __using__(_) do
    quote do
      import __MODULE__
    end
  end

  <%= for component <- @components do %>
<%= if component.doc do %>@doc """
<%= component.doc %>
"""
@doc type: :component<% end %>
  <%= if !component.doc && !component.private? do %>@doc false<% end%>
  <%= for class <- component.classes do %><%= render_class_attr(class: class) %><% end %>
  <%= for attr <- component.attrs do %><%= render_attr(attr: attr) %><% end %>
  def<%= if component.private? do %>p<% end %> <%= component.name %>(assigns)<%= if component.template do %> do
    assigns = assigns
    <%= for class <- component.classes do %><%= render_class_assign(class: class) %><% end %>

~H"""
<%= String.trim(component.template.source) %>
"""
  end<% end %><% end %>
end
